{"meta":{"title":"苑长的Index","subtitle":"Life & Science & Technology","description":"Life & Science & Technology 这里是苑长的Index","author":"苑长","url":"https://yuanz1949.github.io","root":"/"},"pages":[],"posts":[{"title":"我的摄影之路","slug":"我的摄影之路","date":"2020-05-27T08:43:38.000Z","updated":"2020-05-27T08:43:38.000Z","comments":true,"path":"技术/多媒体/我的摄影之路/","link":"","permalink":"https://yuanz1949.github.io/%E6%8A%80%E6%9C%AF/%E5%A4%9A%E5%AA%92%E4%BD%93/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/","excerpt":"摄影，记录光影的艺术。","text":"摄影，记录光影的艺术。 我眼中的摄影📸 嘛都不懂怎么摄影❓ 一起拍照吧🌈 夜观天象🌠 植物生长🌱 纪录·生活🥘 我眼中的摄影📸 我就胡诌 嘛都不懂怎么摄影❓ 学到啦活到老啦 一起拍照吧🌈 二话不说，赶快行动呀 夜观天象🌠 植物生长🌱 纪录·生活🥘 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"技术","slug":"技术","permalink":"https://yuanz1949.github.io/categories/%E6%8A%80%E6%9C%AF/"},{"name":"多媒体","slug":"技术/多媒体","permalink":"https://yuanz1949.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%A4%9A%E5%AA%92%E4%BD%93/"}],"tags":[{"name":"摄影","slug":"摄影","permalink":"https://yuanz1949.github.io/tags/%E6%91%84%E5%BD%B1/"},{"name":"单反","slug":"单反","permalink":"https://yuanz1949.github.io/tags/%E5%8D%95%E5%8F%8D/"}]},{"title":"我的视频下载工作流","slug":"我的视频下载工作流","date":"2020-05-09T16:00:00.000Z","updated":"2020-05-09T16:00:00.000Z","comments":true,"path":"科技/多媒体/我的视频下载工作流/","link":"","permalink":"https://yuanz1949.github.io/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/%E6%88%91%E7%9A%84%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%B7%A5%E4%BD%9C%E6%B5%81/","excerpt":"这些方法都存在于网络之上 ——苑金浩","text":"这些方法都存在于网络之上 ——苑金浩 视频下载大观 视频下载之路 1. 发现视频（略） 2. 获得视频链接 3. 使用下载器下载 小建议 视频下载大观 下载视频主要分为 寻找视频 获得视频链接 使用下载器下载 以下按照上述的三个步骤分别推荐下载工具： 视频下载之路 1. 发现视频（略） a) 搜索引擎( 必应 , 百度 )直接按照关键字索引视频 b) 去特定的网站诸如 B站，YouTube，腾讯视频 , 爱奇艺 搜索 c) 某些特定页面的媒体资源（ 中国大学MOOC(慕课) 之类的，随意看到的网站上的视频） 通过这几种过程，一般可以得到视频资源所在的网址（URL） 2. 获得视频链接 *蓝色的字和链接可以直接跳转(背景不是灰色的) a) 对于某些下载器，视频的网址就是视频下载链接（见下you-get） b) IDM浏览器插件（可以自动捕捉页面的多媒体资源并提示，和IDM下载器配套使用） 注意：浏览器扩展依托于浏览器本身的插件市场，需要到对应的市场（网页）下载 谷歌内核浏览器 Edge for Chrome 建议使用 可以在这里下载各种谷歌内核插件：https://www.crx4chrome.com/ IDM插件：ngpampappnmepgilojfohadhhmbhlaek.crx Edge内核浏览器 不建议使用 即可下载插件（注意看插件类别——Edge插件） 此类插件无需更多设置 c）Tampermonkey油猴脚本插件（直接获取下载链接） 插件下载：Tampermonkey (谷歌插件) dhdgffkkebhmkfjojejmpbldmpobfkfo-4.10-Crx4Chrome.com.crx 插件安装完后到Greasyfork下载脚本使用 脚本下载：https://greasyfork.org/zh-CN/scripts d ) 部分视频可以直接在视频画面右键保存（可能需要浏览器支持）。 可以尝试一下，在视频播放的时候在视频画面上右键，可能支持直接保存。 3. 使用下载器下载 a) Internet Download Manager下载器 特色：多线程下载较大提高下载速度 （需要在设置里设置，单个线程速度往往只有几十 kb/s ，多线程叠加）。 1.首先安装IDM Internet Download Manager 官网 2.进行设置 打开IDM的界面之后，点击菜单栏里的选项按钮。 其他设置可以自行设置 b) Python第三方库you-get 自动识别+下载 可以先参考此文You-get中文说明（建议阅读） 首先是安装Python3 Python 3 点击进入官网下载 点击Download Python 下载下来之后直接双击安装即可 安装FFmpeg FFmpeg 点击进入官网下载 将下载的FFmpeg的压缩文件解压到自己放程序的目录里。 设置环境变量使得计算机的cmd程序可以直接调用此程序 环境变量添加方法： https://blog.csdn.net/yy3097/article/details/51063950 安装you-get 按下Win+X，再按C，调出命令提示符cmd 直接输入 pip install you-get 使用 直接输入you-get www.XXX.XXX即可下载 www.XXX.XXX为观看视频的URL 当然you-get还支持非常多的其他参数，这里就不详说了 c ) 使用特别的程序直接下载 中国大学MOOC（Window应用商店） 可直接下载各科视频 哔哩哔哩动画（Window应用商店） 可直接缓存视频和弹幕 优酷，爱奇艺等客户端 …… 小建议 视频下载的方法非常多，各种方法适用于不同的场景 但是最重要的其实是检索能力，这些工具大都可以直接通过各种搜索引擎直接检索到 可以简单地以XX视频 下载等关键词在Bing &amp; 百度 上直接搜索 当然这可能会花费相当多的时间，但是全部搞明白之后就会对下载有更多的门路和理解 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"科技","slug":"科技","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"多媒体","slug":"科技/多媒体","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/"}],"tags":[{"name":"分享","slug":"分享","permalink":"https://yuanz1949.github.io/tags/%E5%88%86%E4%BA%AB/"},{"name":"工作流","slug":"工作流","permalink":"https://yuanz1949.github.io/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"},{"name":"视频","slug":"视频","permalink":"https://yuanz1949.github.io/tags/%E8%A7%86%E9%A2%91/"}]},{"title":"PDA培养基","slug":"PDA培养基","date":"2020-05-09T03:17:18.000Z","updated":"2020-05-09T03:17:18.000Z","comments":true,"path":"科技/生物/PDA培养基/","link":"","permalink":"https://yuanz1949.github.io/%E7%A7%91%E6%8A%80/%E7%94%9F%E7%89%A9/PDA%E5%9F%B9%E5%85%BB%E5%9F%BA/","excerpt":"自己动手做，熟能生巧 ——苑长","text":"自己动手做，熟能生巧 ——苑长 PDA培养基 简介📘 制备✋ 1.准备材料（此为1LPDA培养基的量，请按需要照此比例增减） 2.配置PDA培养基溶液 3.分装与灭菌 4.倒平板 一点提醒👨‍🔬 一点图片 PDA培养基 简介📘 Potato Dextrose Agar 马铃薯 葡萄糖 琼脂 一种半合成培养基，既有一些天然的有机物质，又有一些成分简单或明确的化合物。 123琼脂又称琼胶或洋菜，是由海藻加工而成。其化学性质稳定一般微生物均不能分解利用。它在`95℃`热水中溶化成溶胶，冷却到`45℃`以下时又重新凝固，常用它作为凝固剂。 如果是要制备液体PDA培养基，只要将如下教程中和琼脂和倒平板相关的略去即可。 制备✋ 1.准备材料（此为1LPDA培养基的量，请按需要照此比例增减） 200g马铃薯(削成薄片) 20g葡萄糖 15~20g 琼脂 1.2L蒸馏水 电子天平 三个小烧杯 一个大烧杯 四个250ml三角瓶 若干橡皮筋 四张封口膜(没有的话 报纸也行) 超净台 玻璃棒 高压灭菌锅 大纱布(至少对叠8层) 平板若干(1L大概可以倒40个1/3深的中型平板) 称量纸若干 加热用的锅 2.配置PDA培养基溶液 将称好的 5g 琼脂和5g 葡萄糖放入250ml 的三角瓶内，重复4次。 液体培养基无需加入琼脂 向加热用的锅加入1L的水和200g的马铃薯薄片，加热煮沸，注意安全。 煮到马铃薯薄片容易被玻璃棒戳破为止，然后停止加热。 （不建议盖上锅盖; 注意淀粉形成的泡沫！） 将纱布折叠出8层，附在锅口处，也可以悬在烧杯上。 将锅内的悬浊液慢慢过滤进烧杯里，此时注意用烧杯刻度估计出滤液的大致体积T。 锅剩下的滤渣加蒸馏水清洗过滤（此时注意加入的水的体积与T之和不能大于1L，自己把握）。 剩下的土豆泥顺势用纱布包住，挤压出剩液，此时把烧杯里的溶液补到1L。 3.分装与灭菌 将上述溶液每个 250ml 分装到三角瓶内，用玻璃棒搅匀，初步溶解后用封口膜和橡皮筋封好。 用报纸把平板包起来。 将四个三角瓶和用布或报纸包好的平板放入高压灭菌锅中灭菌。 参数为 121度 ，20 min ，液体灭菌。 在快要完成灭菌前 20min ，将无菌操作台开紫外灯灭菌。 高压灭菌锅工作完后，取出所有物件放在超净台上，打开紫外灯和通风装置，放置5min。 （在台上将平板拿出，垒好。注意：不可在紫外灯开启时操作） 液体培养基到此就OK了 4.倒平板 关闭紫外灯，开始欢乐地倒平板吧。 倒之前请在水平平面上摇匀培养基。量自己把握，一般占培养基高度的1/3。 倒完一个盖上一个（也可以盖一半来防止蒸汽凝结），三角瓶用完一瓶开一瓶。 全部倒完后，开紫外灯冷却培养基20min。最后将所有平板打包冷藏。 没倒完的三角瓶内的溶液处理掉，找袋子包起来扔垃圾桶。 一点提醒👨‍🔬 琼脂加入的量取决于琼脂的品质，品质好的15g就够了，品质差的应适当增加。 另外，在夏天气温较高时，适当增加用量。 高压灭菌锅在使用前要注意使用前要加蒸馏水到中央小孔相平的水位； 外面的集液装置也要注意不要超过“高”那条线；大筐放下，小筐放上。 PDA培养基溶液勿倒在下水道里，琼脂凝固后会堵住下水道！ 紫外灯开启时不要在附近！ 有任何疑问请询问老师或者学长学姐，切勿擅自操作喔！ 一点图片 本文里的所有图片都是原图喔 收藏直接保存就可 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"科技","slug":"科技","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"生物","slug":"科技/生物","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/%E7%94%9F%E7%89%A9/"}],"tags":[{"name":"实验","slug":"实验","permalink":"https://yuanz1949.github.io/tags/%E5%AE%9E%E9%AA%8C/"}]},{"title":"Blender-Facebuilder插件介绍与插件导入bug处理","slug":"Blender-Facebuilder插件介绍与插件导入bug处理","date":"2020-05-09T03:17:18.000Z","updated":"2020-05-09T03:17:18.000Z","comments":true,"path":"科技/多媒体/Blender-Facebuilder插件介绍与插件导入bug处理/","link":"","permalink":"https://yuanz1949.github.io/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/Blender-Facebuilder%E6%8F%92%E4%BB%B6%E4%BB%8B%E7%BB%8D%E4%B8%8E%E6%8F%92%E4%BB%B6%E5%AF%BC%E5%85%A5bug%E5%A4%84%E7%90%86/","excerpt":"Blender 牛~","text":"Blender 牛~ Facebuilder是啥😵 让我们开始吧🏃 安装插件（解决我碰到的小BUG）🏗 导入 报错与解决⚠️ 解决 小试牛刀🔪 Facebuilder是啥😵 FaceBuilder add-on for Blender, just as its sibling for Nuke, can help with building 3D models of human faces and heads using a couple of photographs. With FaceBuilder you don’t need to be an experienced 3D modeller to create a quality 3D model with clean topology. You start with getting a few photos with neutral face expression taken from different angles and then place a model on each of them to build a head or a face model. You can modify the model without leaving Blender with the procedural approach, so whenever you want to tweak something, the changes you’ve applied to the model will be applied again. The resulting model can be used for sculpting, animation or anything else inside Blender. You can also export the model from Nuke and Blender for further modifications in any other 3D software, for example for rigid-geometry tracking with GeoTracker or for tracking of facial gestures with FaceTracker in Nuke. @Facebuilder官网，https://keentools.io/facebuilder 如上所述 Facebuilder是一个可以用几张照片快速构建人头的3D建模软件(如Blender)的插件(add-on)。 听起来就很不错不是么。 让我们开始吧🏃 如果要开启下面的内容需要安装Blender，同时这个插件笔者在安装的时候出现了一个BUG(如果你下的是新版的话应该就不会有这个问题啦)。 安装插件（解决我碰到的小BUG）🏗 此BUG出现在Facebuilder1.5.7（Beta）里，构建后显示为Version 2.0.2这个版本。 可在官网下载插件的安装文件。 导入 首先调出导入插件的文件对话框，如下图操作即可。 选中下载好的压缩包，确定导入插件。我们可以看到插件的信息面板多了几个按钮，其实是因为这次导入其实只导入了插件的外壳，还有一个包要额外安装。先下载离线包，然后点install from disk导入即可。 报错与解决⚠️ 启用插件(就是插件前面的复选框勾上就好啦)，我们会发现插件启动后，但是插件的信息面板报了错，提示我们去查看系统控制台，这个时候我们调出系统控制台。 可以看到如下图的报错： No module named ‘pykeentools’ 如果读者们熟悉Python，就可以知道这个其实是Python的语法和报错，说的也很直白，就是没有模块叫做‘pykeentools’。那我们明明安装了插件，为啥没有没找到这个包呢。 首先我们理一下什么时候会出现这个报错： 你的确没去装这个包（明显我们尝试了，不是这个问题） 装了没装上或者装错了（这个有可能，我们一般比较菜，可能会操作错误） 点错了按钮，或者漏装了文件 程序猿代码写错了（也就是默认你没出错，是程序猿的锅） 包没有放到程序猿想要放到位置，代码写错了 我们可以看到上面的报错里有一些文件的地址，就像下面的图片一样： 那些地址指向的文件，实际上就是导入插件时工作的Python文件，而且是和报错相关的文件，我们去这个地址瞅瞅。插件结构如下： 我们会发现报错的文件位于我们后面才安装的包里，也就是blender_independert_packages里面的文件，其实这里就说明包的确导入了，但是没有被识别到。 好像有了些眉目，首先文件的确是在的，但是没被找到。回过头看报错，可以知道首次触发报错的是一个叫做loader.py的文件。这就有意思了，刚好我们就是导入(装载器，loader)的错误。 打开loader.py文件，检索一下就找到了import pykeentools 语句，这正是报错的那条导入模块的语句。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950@@@ 三个‘@’开头的语句都是我加的注释import sysimport osfrom .config import *from .install import is_installed__all__ = ['loaded', 'module']def _do_pkt_shadow_copy(): @@@这里是创建着色器的缓存目录 import tempfile @@@创建完后会返回这个缓存目录的地址 import shutil @@@我们的插件也会被复制到这个目录里 shutil.rmtree(SHADOW_COPIES_DIRECTORY, ignore_errors=True) os.makedirs(SHADOW_COPIES_DIRECTORY, exist_ok=True) shadow_copy_base_dir = tempfile.mkdtemp(dir=SHADOW_COPIES_DIRECTORY) shadow_copy_dir = os.path.join(shadow_copy_base_dir, 'pykeentools') shutil.copytree(pkt_installation_dir(), shadow_copy_dir) return shadow_copy_dirdef _add_pykeentools_to_sys_path(): @@@添加插件到环境变量中 if os_name() == 'windows': pkt_directory = _do_pkt_shadow_copy() else: pkt_directory = pkt_installation_dir() pkt_lib_directory = os.path.join(pkt_directory, RELATIVE_LIB_DIRECTORY) @@@获取包的安装目录 if pkt_lib_directory not in sys.path: sys.path.append(pkt_lib_directory) @@@添加包的目录到系统的环境变量里def loaded(): @@@判断插件是否在系统的模块里 return 'pykeentools' in sys.modules# TODO add custom exceptions with helpful error message# TODO check loaded pykeentools version &gt; MIN_VERSIONdef module(): @@@这里是整个文件的核心，会调用上面三个函数来完成缓存目录的创建和插件导入 \"\"\" A function to load pykeentools library :raises ImportError :return: pykeentools module \"\"\" if not loaded() and is_installed(): _add_pykeentools_to_sys_path() import pykeentools @@@导入pykeentool包 return pykeentools 代码不是非常的复杂，大概看一下变量的英文就可知道是如何运转的了。 代码获取插件的安装目录pkt_directory，然后调用系统包os把插件的目录添加到环境变量sys.path.append(pkt_lib_directory)，然后再导入pykeentools包import pykeentools 那问题来了，包的确安装到位置了（在目录里看到了pykeentools的文件夹其实就是包的本质），代码的确也写了导入这个包的指令了，那问题出在哪呢？自然应该是环境变量出问题了。 环境变量是什么呢，其实就是一个地址目录。如果一个程序文件调用另一个程序文件，只给了文件名来调用，如果被调用的程序文件不在这个文件的同一个文件夹，也不在环境变量里，系统就会报错，找不到该文件。 有点像你在一个房间里叫：张三~张三~，那其他人肯定先看看这个房间里(同一个文件夹)张三在不在，如果不在就会去某些被允许去的地方(环境变量)再去找，找不到自然就报错了。 那我们先看看导入插件后的环境变量怎么样了吧。由于是Python，实现其实很简单，进入Blender的scripting工作区，就可以看到左下角的一个终端界面。 输入如下图箭头的两个指令： import sys #导入sys系统包，里面有可以调用系统命令的代码 sys.path #调用sys包里的path方法，就可以直接显示出系统变量啦 仔细一看最后一排的地址（环境变量按照，来分割不同的地址），和我们的插件的位置有些相似，却有些许不同。 去瞅瞅！ 可以看到，基本上插件的内容都被复制到这里，和之前的loader.py的代码时相符的。但是仔细一看内部文件夹的地址，咦，好像有些不对劲。 #程序导入系统的环境变量如下： C:\\Users\\WOODYUAN\\AppData\\Local\\Temp\\pykeentools_shadow_copies\\tmpu0jh0wpb\\pykeentools\\pykeentools\\pykeentools #但是实际的文件夹的构造如下： C:\\Users\\WOODYUAN\\AppData\\Local\\Temp\\pykeentools_shadow_copies\\tmpu0jh0wpb\\pykeentools\\pykeentools==_installation==\\pykeentools 显而易见，你既可以认为是环境变量导入是漏了_installation，也可以认为是文件夹多了_installation。 这个差异导致系统找不到这个文件夹，自然找不到pykeentools这个包。 给loader.py的代码添加了print语句来输入变量，也进一步证实了推测，的确少了_installation。 解决 由于Temp里的文件是从插件目录里复制过来的，我们修改插件目录里的文件夹就好啦。到C:\\Users\\WOODYUAN\\AppData\\Roaming\\Blender Foundation\\Blender\\2.82\\scripts\\addons\\keentools_facebuilder\\blender_independent_packages\\pykeentools_loader\\pykeentools里，把里面的pykeentools_installation文件夹改名成pykeentools，然后重启插件。 （Win+R，然后输入%appdata%，就可以跳转到自己的C:\\Users\\WOODYUAN\\AppData\\Roaming\\文件夹，然后再按照上面的路径找到插件修改即可） 修改代码，由于可能是_installation的下划线被Python处理掉了导致整个字符都没了，而且该处理不在loader.py里，笔者就没有尝试修改代码了，提个给程序员提一个issue让他们自己解决吧。 如果你先禁用插件再启用，看到了类似这样的版本信息Version 2.0.2, built Apr 30 2020, 17:57:14。 恭喜你，BUG修复啦。 小试牛刀🔪 安装成功后，在建模的窗口的右侧，就有一个叫做FaceBuilder的选项，点一下，插件就可以用啦。 点一下Create a new head就会出现一个默认的人头啦。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"科技","slug":"科技","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"多媒体","slug":"科技/多媒体","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yuanz1949.github.io/tags/Python/"},{"name":"Blender","slug":"Blender","permalink":"https://yuanz1949.github.io/tags/Blender/"},{"name":"3D","slug":"3D","permalink":"https://yuanz1949.github.io/tags/3D/"}]},{"title":"Blog咕咕咕","slug":"Blog咕咕咕","date":"2020-05-04T14:59:56.014Z","updated":"2020-05-04T14:59:56.014Z","comments":true,"path":"生活/搞事情吖/Blog咕咕咕/","link":"","permalink":"https://yuanz1949.github.io/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/Blog%E5%92%95%E5%92%95%E5%92%95/","excerpt":"咕咕~咕咕咕~咕咕 ​ —— 苑长 一只鸽子","text":"咕咕~咕咕咕~咕咕 ​ —— 苑长 一只鸽子 目前在咕的项目 🐦 还在 咕咕咕的 长期更新的项目🌾 小笔记📓 目前在咕的项目 🐦 Blender- Facebuilder插件介绍与插件导入bug处理 持续更新-Manim源码解读 方头人手册 太阳做壁纸-用Python的astropy和matplotlib库处理FITS文件 羚苑学者指南 还在 咕咕咕的 长期更新的项目🌾 Blog咕咕咕 我的视频下载工作流 书签索引 实时信息 羚苑学者指南 工作流索引 常用资源索引 持续更新@Manim源码解读 小笔记📓 先把 🎏高高立起~ 微信公众号 汉化 开发科学软件、编译 小竞赛的概念 *进化树 溶液配制（占比 方法等） 备份网上数据 AI 搭服务器 日历app 爬虫 天气 通知 RSS document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"生活","slug":"生活","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/"},{"name":"搞事情吖","slug":"生活/搞事情吖","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/"}],"tags":[{"name":"计划","slug":"计划","permalink":"https://yuanz1949.github.io/tags/%E8%AE%A1%E5%88%92/"}]},{"title":"工作流索引","slug":"工作流索引","date":"2020-04-29T15:45:25.000Z","updated":"2020-04-29T15:45:25.000Z","comments":true,"path":"索引/工作流索引/工作流索引/","link":"","permalink":"https://yuanz1949.github.io/%E7%B4%A2%E5%BC%95/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%B4%A2%E5%BC%95/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%B4%A2%E5%BC%95/","excerpt":"一通操作猛如虎 ——佚名","text":"一通操作猛如虎 ——佚名 简介 工作流 本Blog网站工作流 视频下载工作流 简介 这里介绍的都是苑长自己使用的工具和网站。 涉及方方面面，可以靠着工作流来完成各种任务。 请注意一下的工作流是依托于性能非常一般的笔记本电脑和性能还可以的手机构建的。 工作流 本Blog网站工作流 参见下文 我使用Hexo+Github搭建Blog的经验 视频下载工作流 参见下文 我的视频下载工作流 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"索引","slug":"索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/"},{"name":"工作流索引","slug":"索引/工作流索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%B4%A2%E5%BC%95/"}],"tags":[{"name":"分享","slug":"分享","permalink":"https://yuanz1949.github.io/tags/%E5%88%86%E4%BA%AB/"}]},{"title":"持续更新@Manim源码解读","slug":"持续更新-Manim源码解读","date":"2020-04-29T12:23:34.000Z","updated":"2020-04-29T12:23:34.000Z","comments":true,"path":"科技/多媒体/持续更新-Manim源码解读/","link":"","permalink":"https://yuanz1949.github.io/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-Manim%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB/","excerpt":"数学之美，编程实现之 @苑长","text":"数学之美，编程实现之 @苑长 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"科技","slug":"科技","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"多媒体","slug":"科技/多媒体","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/"}],"tags":[{"name":"视频","slug":"视频","permalink":"https://yuanz1949.github.io/tags/%E8%A7%86%E9%A2%91/"},{"name":"manim","slug":"manim","permalink":"https://yuanz1949.github.io/tags/manim/"},{"name":"Python","slug":"Python","permalink":"https://yuanz1949.github.io/tags/Python/"}]},{"title":"拿太阳做壁纸-用Python的astropy和matplotlib库处理FITS文件","slug":"拿太阳做壁纸-用Python的astropy和matplotlib库处理FITS文件","date":"2020-04-28T01:51:46.000Z","updated":"2020-04-28T01:51:46.000Z","comments":true,"path":"科技/空天/拿太阳做壁纸-用Python的astropy和matplotlib库处理FITS文件/","link":"","permalink":"https://yuanz1949.github.io/%E7%A7%91%E6%8A%80/%E7%A9%BA%E5%A4%A9/%E6%8B%BF%E5%A4%AA%E9%98%B3%E5%81%9A%E5%A3%81%E7%BA%B8-%E7%94%A8Python%E7%9A%84astropy%E5%92%8Cmatplotlib%E5%BA%93%E5%A4%84%E7%90%86FITS%E6%96%87%E4%BB%B6/","excerpt":"如果你想要 请DIY吧 ——苑长","text":"如果你想要 请DIY吧 ——苑长 机缘巧合🍀 数据的获取📑 让我们先Bing一下⌨️ 拿下数据🗄 开始处理吧 再Bing一下🔔 Astropy库🔭 你好~太阳☀️ 修改色阶🌈 后记 机缘巧合🍀 之前网上闲逛的时候，突然想起 Edge for Chrome 浏览器的 网页App功能 ，又捣鼓了一番。而我之前就装了微博（主要是看航天的微博），便打开测试一下。 于是就看到了一篇微博：新科学家杂志上刊登的高清太阳日冕图，一下子就被这篇文章的封面的照片吸引住了。 配色醒目，细节突出，层次感非常好，而且还是太阳（也许是一种对太阳的特殊感觉）。我便想着搞到高清的图片做壁纸，但是一番搜索，并没有找到（原论文也没有）高清的大图。 由于有这方面的视界，我顺其自然的便想着自己着手做了。因为大部分的天文数据都是开放的，一些处理数据的图像软件也是有的。于是和Bing一起&lt;(￣︶￣)↗[GO!] 数据的获取📑 有了微博的那张图(就是文章开头的那张图啦)，直接搜索引擎就好啦，基本就是先找到新闻源，然后找到这个项目的相关信息，最后下到数据，作图即可。 让我们先Bing一下⌨️ 可以得知是新科学家杂志发表的一篇新闻。 找到新闻源 找到项目 拿下数据🗄 https://hic.msfc.nasa.gov/science.html 开始处理吧 再Bing一下🔔 在Python中FITS格式文件数据的读取 这篇文章详细的介绍了FITS格式的结构内容，以及一个叫做Astropy的处理天文数据的Python库 Astropy库🔭 由于是Python的第三方库，直接Win+X,再点C调出命令提示符cmd后，输入： pip install astropy 安装搞定！ 你好~太阳☀️ 通过查阅Astropy的文档 ![matplotlib默认色阶绘制的图](aia.lev1.2018-05-29T185610Z.172929830.image_lev1 色彩1.png) ![OpenCV直接导出的黑白图](aia.lev1.2018-05-29T185610Z.172929830.image_lev1 黑白.png) 修改色阶🌈 cmap其实是colormap的缩写，指代的意思是色彩映射图。 matplotlib.pyplot——cmap直观理解 后记 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"科技","slug":"科技","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"空天","slug":"科技/空天","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/%E7%A9%BA%E5%A4%A9/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://yuanz1949.github.io/tags/Python/"},{"name":"天文","slug":"天文","permalink":"https://yuanz1949.github.io/tags/%E5%A4%A9%E6%96%87/"},{"name":"图像处理","slug":"图像处理","permalink":"https://yuanz1949.github.io/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"}]},{"title":"羚苑学者指南","slug":"羚苑学者指南","date":"2020-04-23T08:54:32.000Z","updated":"2020-04-23T08:54:32.000Z","comments":true,"path":"生活/搞事情吖/羚苑学者指南/","link":"","permalink":"https://yuanz1949.github.io/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/%E7%BE%9A%E8%8B%91%E5%AD%A6%E8%80%85%E6%8C%87%E5%8D%97/","excerpt":"新新人类","text":"新新人类 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"生活","slug":"生活","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/"},{"name":"搞事情吖","slug":"生活/搞事情吖","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/"}],"tags":[{"name":"计划","slug":"计划","permalink":"https://yuanz1949.github.io/tags/%E8%AE%A1%E5%88%92/"}]},{"title":"方头人手册","slug":"方头人手册","date":"2020-04-23T08:52:03.000Z","updated":"2020-04-23T08:52:03.000Z","comments":true,"path":"生活/搞事情吖/方头人手册/","link":"","permalink":"https://yuanz1949.github.io/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/%E6%96%B9%E5%A4%B4%E4%BA%BA%E6%89%8B%E5%86%8C/","excerpt":"方方正正 圆圆滑滑","text":"方方正正 圆圆滑滑 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"生活","slug":"生活","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/"},{"name":"搞事情吖","slug":"生活/搞事情吖","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/"}],"tags":[{"name":"设计","slug":"设计","permalink":"https://yuanz1949.github.io/tags/%E8%AE%BE%E8%AE%A1/"},{"name":"方头人","slug":"方头人","permalink":"https://yuanz1949.github.io/tags/%E6%96%B9%E5%A4%B4%E4%BA%BA/"}]},{"title":"常用资源索引","slug":"常用资源索引","date":"2020-03-22T14:30:20.000Z","updated":"2020-03-22T14:30:20.000Z","comments":true,"path":"索引/资源索引/常用资源索引/","link":"","permalink":"https://yuanz1949.github.io/%E7%B4%A2%E5%BC%95/%E8%B5%84%E6%BA%90%E7%B4%A2%E5%BC%95/%E5%B8%B8%E7%94%A8%E8%B5%84%E6%BA%90%E7%B4%A2%E5%BC%95/","excerpt":"不在多，而在精。 ——苑长 如你所见，这是一篇苑长的Index，也可以是大家的Index。","text":"不在多，而在精。 ——苑长 如你所见，这是一篇苑长的Index，也可以是大家的Index。 网址索引 软件推荐 浏览器 谷歌内核浏览器插件 截图 快捷工具 下载器 安全软件 多媒体 视频 3D 音频 *请点击蓝色超链接跳转 网址索引 ：这里下载 江科大VPN 江科大VPN 2 江科大VPN通用访问 : https://vpn.just.edu.cn/,DanaInfo= (+URL 复制使用) 江科大VPN-SciHub 必应搜索 软件推荐 浏览器 Edge for Chrome 同步多平台Edge浏览器信息 支持谷歌插件 谷歌内核浏览器插件 油猴脚本：我的脚本备份 外置自动化脚本管理器 IEtab 兼容IE 沙拉查词 划词 同步单词本 OneTab 标签页统一保存归档 IDM 配合IDM软件嗅探网页资源 截图 Snipaste 贴图 快捷工具 Wox 快速调出文件 执行cmd 等等等等 Listary 急速检索 文档管理器增强 快捷调出 下载器 Internet Download Manager 多线程 http ftp qBittorrent BT种子 磁力链接 安全软件 火绒 权限控制 联网控制 弹窗拦截 多媒体 视频 handbrake 视频压制 小丸工具箱 视频压制 视频滤镜 音轨视频轨分离 …… Aegisub 字幕 字幕特效 字幕图片 olive 视频剪辑 3D Blender 建模 特效 动画(2D/3D) 音频 LMMS 电子合成音 Audacity 音频剪辑 音频滤镜 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"索引","slug":"索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/"},{"name":"资源索引","slug":"索引/资源索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/%E8%B5%84%E6%BA%90%E7%B4%A2%E5%BC%95/"}],"tags":[{"name":"分享","slug":"分享","permalink":"https://yuanz1949.github.io/tags/%E5%88%86%E4%BA%AB/"}]},{"title":"书签索引","slug":"书签索引","date":"2020-03-22T14:30:20.000Z","updated":"2020-03-22T14:30:20.000Z","comments":true,"path":"索引/资源索引/书签索引/","link":"","permalink":"https://yuanz1949.github.io/%E7%B4%A2%E5%BC%95/%E8%B5%84%E6%BA%90%E7%B4%A2%E5%BC%95/%E4%B9%A6%E7%AD%BE%E7%B4%A2%E5%BC%95/","excerpt":"检索资料，建立索引。 @苑长 如你所见，这是苑长的书签，也可以是大家的书签。","text":"检索资料，建立索引。 @苑长 如你所见，这是苑长的书签，也可以是大家的书签。 书签下载（右键另存为） 一级目录 二级目录 ······ 二级目录内容 ······ 一级目录内容 ······ details { padding-left: 20px; } /*隐藏默认箭头*/ details ::-webkit-details-marker { display: none; } details ::-moz-list-bullet { font-size: 0; } /*加载自定义箭头*/ details summary::before { font-family:FontAwesome; content: '\\f07b'; position: absolute; width: 1em; height: 1em; margin: 0 0 0 -1.2ch; transition: transform .2s; } details div::before { font-family:FontAwesome; content: '\\f07b'; position: absolute; width: 1em; height: 1em; margin: 0 0 0 -1.2ch; transition: transform .2s; } /*防止点击过快选中文本*/ details summary { -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } /*隐藏点击后出现的黑框*/ details summary { outline: 0; } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"索引","slug":"索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/"},{"name":"资源索引","slug":"索引/资源索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/%E8%B5%84%E6%BA%90%E7%B4%A2%E5%BC%95/"}],"tags":[{"name":"分享","slug":"分享","permalink":"https://yuanz1949.github.io/tags/%E5%88%86%E4%BA%AB/"},{"name":"网站","slug":"网站","permalink":"https://yuanz1949.github.io/tags/%E7%BD%91%E7%AB%99/"}]},{"title":"实时信息","slug":"实时信息","date":"2020-03-22T14:29:51.000Z","updated":"2020-03-22T14:29:51.000Z","comments":true,"path":"索引/实时信息/实时信息/","link":"","permalink":"https://yuanz1949.github.io/%E7%B4%A2%E5%BC%95/%E5%AE%9E%E6%97%B6%E4%BF%A1%E6%81%AF/%E5%AE%9E%E6%97%B6%E4%BF%A1%E6%81%AF/","excerpt":"时 间 就 是 金 钱 效 率 就 是 生 命 Time is money, efficiency is life. 袁庚蛇口工业区标语","text":"时 间 就 是 金 钱 效 率 就 是 生 命 Time is money, efficiency is life. 袁庚蛇口工业区标语 实时信息 实时信息 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"索引","slug":"索引","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/"},{"name":"实时信息","slug":"索引/实时信息","permalink":"https://yuanz1949.github.io/categories/%E7%B4%A2%E5%BC%95/%E5%AE%9E%E6%97%B6%E4%BF%A1%E6%81%AF/"}],"tags":[{"name":"分享","slug":"分享","permalink":"https://yuanz1949.github.io/tags/%E5%88%86%E4%BA%AB/"},{"name":"热点","slug":"热点","permalink":"https://yuanz1949.github.io/tags/%E7%83%AD%E7%82%B9/"}]},{"title":"我使用Hexo+Github搭建Blog的经验","slug":"我使用Hexo+Github搭建Blog的经验","date":"2020-03-22T04:40:17.000Z","updated":"2020-03-22T04:40:17.000Z","comments":true,"path":"科技/多媒体/我使用Hexo+Github搭建Blog的经验/","link":"","permalink":"https://yuanz1949.github.io/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/%E6%88%91%E4%BD%BF%E7%94%A8Hexo+Github%E6%90%AD%E5%BB%BABlog%E7%9A%84%E7%BB%8F%E9%AA%8C/","excerpt":"尝试在你准备提问论坛的历史文档中搜索答案 尝试搜索互联网以找到答案 尝试阅读手册以找到答案 尝试阅读常见问题文档(FAQ)以找到答案 尝试自己检查或试验以找到答案 尝试请教懂行的朋友以找到答案 如果你是程序员，尝试阅读源代码以找到答案 艾瑞克.史蒂文.雷蒙德&amp;瑞克.莫恩《提问的艺术》","text":"尝试在你准备提问论坛的历史文档中搜索答案 尝试搜索互联网以找到答案 尝试阅读手册以找到答案 尝试阅读常见问题文档(FAQ)以找到答案 尝试自己检查或试验以找到答案 尝试请教懂行的朋友以找到答案 如果你是程序员，尝试阅读源代码以找到答案 艾瑞克.史蒂文.雷蒙德&amp;瑞克.莫恩《提问的艺术》 说在前面的话 这是第一篇正式的Blog，记录这个小小网站的搭建的“血泪史”。我觉得分享出来应该可以为中文互联网贡献一点点经验，这是早就要做的，也是终于做起来的。鉴于是第一篇，我相信不管是效率还是美观等方面都是不足的，希望寥寥的客人们，不要过于介意（介意我也就这水平 😄 )。 本站介绍 本站采用如下工作流： Typora：编写.md格式的Blog文章或者是页面 文本编辑器 支持markdown和html语法 可实时预览 Hexo：渲染.md格式文件为HTML网站并测试发布Blog 网站维护工具（渲染/测试/发布网站） 网站插件（功能插件/美化插件/维护插件）很多 网站模板（各种主题或者是不同类型的网站）很多 Github：Hexo将把渲染好的.html文件上传到Github的仓库（repository），大家就可以通过一个特定的域名 ?.github.io 访问 世界上最大的 同性 程序员交流网站 功能很多，有利于学习更多计算机知识 另外还有支持这一套工作流的软件： Node.Js：hexo是Javascript语言编写的，要电脑运行Javascript的桌面端Node.js（对应的hexo的插件也都是都是Javascript编写的） 另外是npm是Node.js的包管理器，Node.js只提供软件运行的环境，如果你需要下载别人的软件就需要npm帮助你下载和管理各个软件之间的依赖。不光是用npm现在hexo，还可以下载hexo的插件等等。 Git：渲染好的.html文件将由集成在hexo内的deploye插件调用Git软件来上传到GitHub。Git被称为“分布式版本控制系统”，可以上传（commit）也可以下载（clone）一个代码仓库（repository）。这只是基础功能，还有可以回滚版本，查看合作者修改的代码等，是一个多人协作和代码版本管理的利器。 *点击软件的名字可以跳转到对应的官网喔 一些细节 本站的本地缓存见下： 本站由Hexo使用ejs引擎渲染。 其实是因为本站是从hexo模板——hueman改造的。该模板采用ejs模板语言编写，主要定义了网站的HTML框架，并调用了各种内置的和我自己下载的的插件（插件要嵌入到html文件里才能被调用；工具你自己不找着用，它是不会自己动起来的）。ejs模板的组织方式如下图： 另外光有ejs模板只能生成没有灵魂的html框架，页面非常的“古老”，没有美感。所以这个模板通过使用hexo引擎渲染.styl文件生成css文件来修饰html。本模板的styl的文件布局如下： 所以主要的插件功能添加删除等修改网站的结构和功能的是修改ejs文件，而美化工作都是修改styl文件。 本站的文章采用markdown标记语言和Hexo Tag标签编写，少部分涉及\\(Tex\\)公式和HTML语言，另外引入了 : emoji : toc 以及一些其他的语法。 这些格式和内容，都是使用各种插件按照一定的约定的记号来渲染。 编写的文章实际长这样。 但是得益于Typora的实时渲染这个只有特定的情况需要进入这样的状态。 小小的提醒 🔴 npm 作为一种包管理器，如果你装的插件过多，不可避免的有包依赖之间冲突的问题。所以如果你没有编程能力（解决软件依赖冲突的能力），请尽量少的安装插件。采用成熟的模板，这样作者是适配好了很多好的插件的。 比如hexo-renderer-markdown-it-plus的功能就非常多支持的语法： katex, sub, sup, ins, emoji, toc&amp;anchor, deflist, abbr, footnote, mark 这样不用装单个的了（如果你不想大而全，也可以一个一个单装）。 有个别包（插件）运行需要其他的包，npm却不会自动帮你安装，但是会给你提醒，这个时候要手动安装，否则无法工作。 还有就是旧版本的npm包可能有漏洞，如果没有升级到高版本可能有危险，但是升到高版本可能导致其他包和这个包的依赖（合作）被破坏。请慎重，因为本Blog大部分为静态页面，哪怕是响应式的部分也是被限制了权限的，因此没有特别关心安全问题，请结合情况自己考量。 Hexo 请适时备份由Hexo生成的整个博客文件夹！ 请适时备份由Hexo生成的整个博客文件夹！ 请适时备份由Hexo生成的整个博客文件夹！ 这是为了保证你的安装的每个包，你做的每个修改还有复原的余地，这样就不用重新来过了（尤其是你同时修改很多文件的时候 😭 ）。 每次还是尽量只对一个具体的功能或者是样式进行修改（除非你很清楚你一起修改的东西内部是一样的工作机制）。 注意_config.yml这个文件，它是整个网站的主配置文件。修改它一定要仔细阅读官方的设置说明以及插件的说明，否则Hexo将无法正常工作！比如 hexo无法识别hexo clean，hexo deploy,hexo generate等 调用hexo generate时出现黄色或白色的报错 生成的网站没有成功添加想要的功能 如果出现上述情况，设置文件就要注意（一开始也要注意）： 一定要仔细阅读官方的设置说明以及插件的说明 注意缩进保持一致 不要在句尾带有多余的空格 如果插件放在主设置里无用，可以放到主题的设置里 插件没有工作或者是Hexo都罢工了，不要慌，检查一些设置的字符是不是插件要求的字符，或者是字符的位置或者是缩进搞错了。实在不行，撤回操作或者回退版本吧。 Github Github的最大的问题是作为一个海外的网站，访问速度可能不尽如人意。尤其是受到一些不可抗力的因素影响，可能会访问缓慢。Blog的图片和视频往往是不会放到Github上的，访问较慢，而且GitHub的仓库有事实上的大小的限制，所以尽量将大的图和视频上传到专门的图床(这是一类专门放置图片的云盘网站)和视频网站，然后放置图片链接在页面里，这样打开网站的时候，浏览器解析代码会自动把图片链接放置在页面里，这样就加速了访问。 就像这样的链接会自动转换为链接上的图片： 另一个要说的是，本网站使用Gitalk作为评论系统。实际是将评论储存在Github的issue里的，Github的每个仓库（repository）都有一个用来处理疑问的issue。网站每篇文章由Gitalk通过远程操作在Github开一个issue来实现评论，所以如果要评论请务必创建一个Github账号（等该网站迁移到自己的服务器就不需要了，可是那就是猴年马月了,先立个​​ 🏳️‍🌈：我毕业后就买个云服务器！)。 HTML+CSS 如果要修改模板的HTML和CSS请作好ejs文件和styl文件的备份，方便回滚。如果你从来没有学过html和css，那么在Notepad++，Hexo-server（hexo插件）和浏览器的开发者工具（网站页面右键检查或者是开发者模式）会是你的好帮手。 使用Hexo渲染模板后，启动Hexo-server，浏览器打开访问网站。通过开发者工具定位要修改的HTML元素的位置，直接通过开发者工具修改HTML或者是CSS，可实时预览效果。使用文本编辑器Notepad++在本地文件里定位前面你认为不错的改动。然后Hexo再渲染，启动Hexo-server来检查。 此次发现了一个Edge for Chrome的一个背景图片的Bug，所以如果页面出了问题，可以尝试使用不同的浏览器测试同样的网页，排除浏览器的锅（但是如果出了问题一般还是要怀疑自己哈 😸)。 所以 和计算机相关的事往往需要巨大的耐心。 ————苑长 如果你没有编程经验，而且不想学习复杂的计算机知识的话，还是使用更加成熟的 CSDN/博客园/知乎/简书 的平台更好。如果你喜欢技术，喜欢搞事情，喜欢自己掌控，那就折腾吧。 生命不息~折腾不止~ 大尾巴 其实很多的坑并不是坑，Hexo+Github的Blog流还是更适合想对网站有更大掌控力的程序员。如果你只喜欢分享，而不太关心界面之类的，自然是推荐CSDN/博客园/知乎/简书。而要有更大的掌控，就要有一定的技术力，这样无疑要付出巨大的努力。但是一旦成功就会有很大的收获。鉴于目前的工作流，这个网站可以到处迁移（不光可以在Github也可以在码云，还可以自己搭服务器给大家访问。同时，界面完全在自己的掌控之中。 算是就这样吧，我会尝试在之后的时间里丰富它的内容的。毕竟学到老，活到老，可以不停地改进，螺旋上升。 时值疫情，愿世界平安度过吧。🌈 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"科技","slug":"科技","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/"},{"name":"多媒体","slug":"科技/多媒体","permalink":"https://yuanz1949.github.io/categories/%E7%A7%91%E6%8A%80/%E5%A4%9A%E5%AA%92%E4%BD%93/"}],"tags":[{"name":"分享","slug":"分享","permalink":"https://yuanz1949.github.io/tags/%E5%88%86%E4%BA%AB/"},{"name":"Hexo","slug":"Hexo","permalink":"https://yuanz1949.github.io/tags/Hexo/"},{"name":"Github","slug":"Github","permalink":"https://yuanz1949.github.io/tags/Github/"},{"name":"Blog","slug":"Blog","permalink":"https://yuanz1949.github.io/tags/Blog/"}]},{"title":"关于","slug":"about","date":"2020-03-15T14:29:41.000Z","updated":"2020-03-15T14:29:41.000Z","comments":true,"path":"生活/about/","link":"","permalink":"https://yuanz1949.github.io/%E7%94%9F%E6%B4%BB/about/","excerpt":"关于 如你所见，这是一篇“关于”。","text":"关于 如你所见，这是一篇“关于”。 这里是 ❓ 我是谁 ^_^ 联系我 : ) 还有其他的嘛 😜 这里是 ❓ 这里是苑长的博客（Blog） 苑长的 —— 信息汇聚地（苑长的Index） 好玩的分享站 嘿嘿 还没想好…… 我是谁 ^_^ 显然我是苑长 科技爱好者 喜欢搞好玩的 联系我 : ) E-mail : 504567327@qq.com 还有其他的嘛 😜 Nothing. 苑长 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"生活","slug":"生活","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"关于","slug":"关于","permalink":"https://yuanz1949.github.io/tags/%E5%85%B3%E4%BA%8E/"},{"name":"生活","slug":"生活","permalink":"https://yuanz1949.github.io/tags/%E7%94%9F%E6%B4%BB/"}]},{"title":"这是一篇TestBlog","slug":"这是一篇TestBlog","date":"2020-03-15T06:53:03.000Z","updated":"2020-03-15T06:53:03.000Z","comments":true,"path":"生活/搞事情吖/这是一篇TestBlog/","link":"","permalink":"https://yuanz1949.github.io/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/%E8%BF%99%E6%98%AF%E4%B8%80%E7%AF%87TestBlog/","excerpt":"任何理论都要不断接受实践的检验。 胡福明《实践是检验真理的唯一标准》 前言 测试 MD语法 公式 Hexo标签插件 前言 此Blog网站由Hexo提供模板（hueman）和引擎，考虑到笔者的水平且网站模板经过了修改，在这里放置一篇TestBlog来测试功能是否正常。","text":"任何理论都要不断接受实践的检验。 胡福明《实践是检验真理的唯一标准》 前言 测试 MD语法 公式 Hexo标签插件 前言 此Blog网站由Hexo提供模板（hueman）和引擎，考虑到笔者的水平且网站模板经过了修改，在这里放置一篇TestBlog来测试功能是否正常。 测试 MD语法 这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本。 这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本，这里插入大量的文字来模拟真实的文本。 “” ‘’ …… 【】 ； ， 。 ？ 、 This is test.This is test This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test. This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test.This is test. , . · ; : ‘’ “” [] | &amp;ensp; 单空格 &amp;emsp; 双空格 我们要走出去 1print(\"Hello World\") 123plugins: lightgallery: true # options: true, false justifiedgallery: true # options: true, false 1234567891011121314151617181920212223242526272829303132333435import numpy as npimport matplotlib.pyplot as pltiter_func = lambda z,c:(z**2 + c) # iteration function def calc_steps(c, max_iter_num=128) : z = complex(0,0) # initial value of Z num = 0 while abs(z) &lt; 2 and num &lt; max_iter_num: z = iter_func(z,c) num += 1 return numdef display_mandelbrot(x_num=1000,y_num=1000): X, Y = np.meshgrid(np.linspace(xa,xb,x_num + 1), np.linspace(yb,ya,y_num+1)) C = X + Y*1j result = np.zeros((y_num+1, x_num+1)) for i in range(y_num+1): print(i) for j in range(x_num+1) : #print(j) result[i,j] = calc_steps(C[i,j]) plt.imshow(result,interpolation=\"bilinear\",cmap = plt.cm.hot, vmax = abs(result).max(),vmin=abs(result).min(), extent=[xa,xb,ya,yb]) plt.show()if __name__ == \"__main__\" : xa = -0.75 xb = -0.5 ya = 0.25 yb = 0.5 display_mandelbrot(1000,1000) printf(\"test\"); `printf(“test”);` test test test test 1234- test - test - test - test [x] test - [x] test dfdf dfdf df dd eee *** First Header Second Header Content Cell Content Cell Content Cell Content Cell You can create footnotes like this[1]. You can create footnotes like this[^footnote]. [^footnote]: Here is the text of the footnote. test[^test] test[^test] 这是尝试引用test 这是尝试引用[test ](test) [test][] [test][] [text]:https://yuanz1949.github.io 苑长的Index [苑长的Index](https://yuanz1949.github.io/ “这是注释”) https://yuanz1949.github.io &lt;https://yuanz1949.github.io&gt; text &lt;span style=“color:red”&gt;text&lt;/span&gt; ​ test ==text== test test test test test ==text== **test** `test` *test* ***test*** ​ test test test test ~~test~~ ~test~ &lt;u&gt;test&lt;/u&gt; test &lt;test&gt; ​ 😄 ​ ​ ​ ◀️ 😄 ◀️ （其实没有“\\”） 🎉 &lt;!–￼38–&gt; ​ H2O Xlong text X2 H~2~O X~long text~ X^2^ The HTML specification is maintained by the W3C. &lt;p&gt;The &lt;abbr title=“Hyper Text Markup Language”&gt;HTML specification is maintained by the &lt;abbr title=“World Wide Web Consortium”&gt;W3C.&lt;/p&gt; 尝试搜索互联网以找到答案 艾瑞克.史蒂文.雷蒙德(Eric Steven Raymond)&amp;瑞克.莫恩(Rick Moen)@《提问的艺术》 ![zhihu](https://pic4.zhimg.com/v2-b757330367850e9db5078be3b6c395d8_xl.jpg “这是注释”) 1&lt;iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'&gt;&lt;/iframe&gt; &lt;video src=’ ’ type=‘video/mp4’ controls=‘controls’ width=‘100%’ height=‘100%’&gt; &lt;/video&gt; 123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! ``` Alice-&gt;Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob–&gt;Alice: I am good thanks! ``` 1234567st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op ``` st=&gt;start: Start op=&gt;operation: Your Operation cond=&gt;condition: Yes or No? e=&gt;end st-&gt;op-&gt;cond cond(yes)-&gt;e cond(no)-&gt;op ``` 公式 $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\ \\frac{\\partial X}{\\partial u} &amp; \\frac{\\partial Y}{\\partial u} &amp; 0 \\ \\frac{\\partial X}{\\partial v} &amp; \\frac{\\partial Y}{\\partial v} &amp; 0 \\ \\end{vmatrix} $$ 1234567$$\\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix}\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\\\frac{\\partial X}{\\partial u} &amp; \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\\\frac{\\partial X}{\\partial v} &amp; \\frac{\\partial Y}{\\partial v} &amp; 0 \\\\\\end{vmatrix}$$ $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\ \\frac{\\partial X}{\\partial u} &amp; \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\ \\frac{\\partial X}{\\partial v} &amp; \\frac{\\partial Y}{\\partial v} &amp; 0 \\\\ \\end{vmatrix} $$ 1234567$$\\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix}\\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\\\\\\\\\frac{\\partial X}{\\partial u} &amp; \\frac{\\partial Y}{\\partial u} &amp; 0 \\\\\\\\\\frac{\\partial X}{\\partial v} &amp; \\frac{\\partial Y}{\\partial v} &amp; 0 \\\\\\\\\\end{vmatrix}$$ $\\lim_{x \\to \\infty} \\exp(-x) = 0)$ $\\lim_{x \\to \\infty} \\exp(-x) = 0)$ \\( \\lim_{x \\to \\infty} \\exp(-x) = 0\\) \\(\\lim_{x \\to \\infty} \\exp(-x) = 0\\) (ax^2 + bx + c = 0) \\(ax^2 + bx + c = 0) \\(ax^2 + bx + c = 0\\) \\(ax^2 + bx + c = 0\\) $$ That is test $$ $$ That is test $$ $2^2$ $H_2O$ $That is my blog!$ $2^2$ $H_2O$ $That is my blog!$ \\(2^2\\) \\(H_2O​\\) \\(That is my blog!​\\) \\(2^2\\) \\(H_2O\\) \\(That is my blog!\\) $$\\begin{aligned} f_Y(y) &amp; = f_X[h(y)]|h’(y)| \\[2ex] &amp; = f_X[h(y)]h’(y) \\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{x}{\\theta}}[\\frac{dx}{dy}(-\\frac{\\theta}{ln(1-y)})] \\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{-\\frac{\\theta}{ln(1-y)}}{\\theta}}\\frac{\\theta}{1-y} \\[2ex] &amp; = \\frac{1}{\\theta}e^{ln(1-y)}\\frac{\\theta}{1-y} \\[2ex] &amp; = \\frac{1-y}{\\theta}\\frac{\\theta}{1-y} \\[2ex] &amp; = 1 \\end{aligned}$$ 123$$\\begin{aligned} f_Y(y) &amp; = f_X[h(y)]|h'(y)| \\\\[2ex] &amp; = f_X[h(y)]h'(y) \\\\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{x}{\\theta}}[\\frac{dx}{dy}(-\\frac{\\theta}{ln(1-y)})] \\\\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{-\\frac{\\theta}{ln(1-y)}}{\\theta}}\\frac{\\theta}{1-y} \\\\[2ex] &amp; = \\frac{1}{\\theta}e^{ln(1-y)}\\frac{\\theta}{1-y} \\\\[2ex] &amp; = \\frac{1-y}{\\theta}\\frac{\\theta}{1-y} \\\\[2ex] &amp; = 1 \\end{aligned}$$ $$\\begin{aligned} f_Y(y) &amp; = f_X[h(y)]|h’(y)| \\\\[2ex] &amp; = f_X[h(y)]h’(y) \\\\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{x}{\\theta}}[\\frac{dx}{dy}(-\\frac{\\theta}{ln(1-y)})] \\\\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{-\\frac{\\theta}{ln(1-y)}}{\\theta}}\\frac{\\theta}{1-y} \\\\[2ex] &amp; = \\frac{1}{\\theta}e^{ln(1-y)}\\frac{\\theta}{1-y} \\\\[2ex] &amp; = \\frac{1-y}{\\theta}\\frac{\\theta}{1-y} \\\\[2ex] &amp; = 1 \\end{aligned}$$ 123$$\\begin{aligned} f_Y(y) &amp; = f_X[h(y)]|h'(y)| \\\\\\\\[2ex] &amp; = f_X[h(y)]h'(y) \\\\\\\\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{x}{\\theta}}[\\frac{dx}{dy}(-\\frac{\\theta}{ln(1-y)})] \\\\\\\\[2ex] &amp; = \\frac{1}{\\theta}e^{-\\frac{-\\frac{\\theta}{ln(1-y)}}{\\theta}}\\frac{\\theta}{1-y} \\\\\\\\[2ex] &amp; = \\frac{1}{\\theta}e^{ln(1-y)}\\frac{\\theta}{1-y} \\\\\\\\[2ex] &amp; = \\frac{1-y}{\\theta}\\frac{\\theta}{1-y} \\\\\\\\[2ex] &amp; = 1 \\end{aligned}$$ Hexo标签插件 That’s testing. 1234{% blockquote %}That's testing.{% endblockquote %}仅含内容 这是一篇TestBlog 苑金浩yuanz1949.github.io 123{% blockquote [author[, source]] [link] [source_link_title] %}content{% endblockquote %} Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake 123{% blockquote David Levithan, Wide Awake %}Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.{% endblockquote %} NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 123{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}NEW: DevDocs now comes with syntax highlighting. http://devdocs.io{% endblockquote %} Every interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing 123{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}Every interaction is both precious and an opportunity to delight.{% endblockquote %} text.html www.example.com example.html1alert('Hello World!'); 123{% codeblock [title] [lang:language] [url] [link text] [additional options] %}code snippet{% endcodeblock %} Additional Options Description Default line_number Show line number true highlight Enable code highlighting true first_line Specify the first line number 1 mark Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: mark:1,4-7,10 will mark line 1, 4 to 7 and 10. wrap Wrap the code block in `` true ``` [language] [title] [url] [link text] code snippet ``` pullquote content 123{% pullquote test %}pullquote content{% endpullquote %} 1{% iframe url [width] [height] %} 1{% img [class names] /path/to/image [width] [height] '\"title text\" \"alt text\"' %} 1{% include_code [title] [lang:language] [from:line] [to:line] path/to/file %} baidu 1{% link text url [external] [title] %} /%E7%94%9F%E6%B4%BB/about/ 1{% post_path filename %} about 1{% post_link filename [title] [escape] %} /%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/%E8%BF%99%E6%98%AF%E4%B8%80%E7%AF%87TestBlog/0001-0500_x264.mp4 1{% asset_path 0001-0500_x264.mp4 %} 1{% asset_img 0001-0500_x264[00_00_01--00_00_21].gif YJH %} YJH 1{% asset_link 0001-0500_x264.mp4 YJH %} 123{% asset_path slug %}{% asset_img slug [title] %}{% asset_link slug [title] %} Here is the text of the footnote. ↩︎ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","categories":[{"name":"生活","slug":"生活","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/"},{"name":"搞事情吖","slug":"生活/搞事情吖","permalink":"https://yuanz1949.github.io/categories/%E7%94%9F%E6%B4%BB/%E6%90%9E%E4%BA%8B%E6%83%85%E5%90%96/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://yuanz1949.github.io/tags/%E6%B5%8B%E8%AF%95/"}]}]}